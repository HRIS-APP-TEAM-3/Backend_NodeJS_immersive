openapi: 3.0.2
info:
  title: HRIS API
  version: "1.0"
servers:
  - url: https://node.backendlagi.online/
tags:
  - name: Reimburse
  - name: Leave
  - name: Key Result
paths:
  /reimburse:
    get:
      tags:
        - "Reimburse"
      summary: Get all reimbursements
      description: Retrieve a list of reimbursements for the authenticated user.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the response.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Reimbursement"
              example:
                message: "Data reimburse ditemukan."
                data:
                  - _id: ObjectId("5fbeb970eadb3457d49a27a4")
                    user_id:
                      - reimburse_name: Kenangan Pahit
                        benefit_name: Biaya Berobat
                        notes: Resep Dokter
                        lead_approval: true
                        hr_approval: true
                        request_amount: 200000.00
                        paid_amount: 0.00
                        file_name: medical_receipt.pdf
                      - reimburse_name: Deritanya Tiada Akhir
                        benefit_name: Biaya Transport
                        notes: Perjalanan Dinas
                        lead_approval: true
                        hr_approval: true
                        request_amount: 350000.00
                        paid_amount: 350000.00
                        file_name: travel_receipt.pdf
        "400":
          description: Bad request
        "500":
          description: Internal server error
    post:
      tags:
        - "Reimburse"
      summary: Create a new reimbursement
      description: Create a new reimbursement for the authenticated user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Reimbursement" # Reference to your schema
            example:
              benefit_name: "Donasi Kamp Adul Hatler"
              notes: "Belajar kelas seni agar berhasil"
              lead_approval: true
              hr_approval: true
              request_amount: 200000.00
              paid_amount: 0.00
              file_name: "medical_receipt.pdf"
      responses:
        "201":
          description: Successful creation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the response.
                  data:
                    $ref: "#/components/schemas/Reimbursement" # Reference to your schema
              example:
                message: "Reimbursement created successfully"
                data:
                  user_id: "4"
                  reimbursements:
                    - reimburse_name: Beginilah Hidupku
                      benefit_name: "Biaya Tank"
                      notes: "Panzer"
                      lead_approval: true
                      hr_approval: true
                      request_amount: 200000.00
                      paid_amount: 0.00
                      file_name: "medical_receipt.pdf"
        "400":
          description: Bad request
        "500":
          description: Internal server error
  /reimburse/alluser:
    get:
      tags:
        - "Reimburse"
      summary: Get all user reimbursements
      description: Retrieve a list of all user reimbursements.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the response.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Reimbursement"
              example:
                message: "Data semua user ditemukan."
                data:
                  - _id: ObjectId("5fbeb970eadb3457d49a27a4")
                    user_id:
                      - reimburse_name: Bujang Lapuk
                        benefit_name: Biaya Berobat
                        notes: Resep Dokter
                        lead_approval: true
                        hr_approval: true
                        request_amount: 200000.00
                        paid_amount: 0.00
                        file_name: medical_receipt.pdf
                      - reimburse_name: Biaya Nikah Padahal Belum Nikah
                        benefit_name: Biaya Transport
                        notes: Perjalanan Dinas
                        lead_approval: true
                        hr_approval: true
                        request_amount: 350000.00
                        paid_amount: 350000.00
                        file_name: travel_receipt.pdf
        "400":
          description: Bad request
        "500":
          description: Internal server error

  /reimburse/approved:
    get:
      tags:
        - "Reimburse"
      summary: Get approved reimbursements
      description: Retrieve a list of approved reimbursements.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the response.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Reimbursement"
              example:
                message: "Data reimburse yang disetujui ditemukan."
                data:
                  - _id: ObjectId("5fbeb970eadb3457d49a27a4")
                    user_id:
                      - reimburse_name: Udah Tua Belum Nikah
                        benefit_name: Biaya Berobat
                        notes: Resep Dokter
                        lead_approval: true
                        hr_approval: true
                        request_amount: 200000.00
                        paid_amount: 0.00
                        file_name: medical_receipt.pdf
                      - reimburse_name: Mengaku Bujangan Ternyata Duda
                        benefit_name: Biaya Transport
                        notes: Perjalanan Dinas
                        lead_approval: true
                        hr_approval: true
                        request_amount: 350000.00
                        paid_amount: 350000.00
                        file_name: travel_receipt.pdf
        "400":
          description: Bad request
        "500":
          description: Internal server error

  /reimburse/pending:
    get:
      tags:
        - "Reimburse"
      summary: Get pending reimbursements
      description: Retrieve a list of pending reimbursements.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the response.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Reimbursement"
              example:
                message: "Data reimburse yang belum disetujui ditemukan."
                data:
                  - _id: ObjectId("5fbeb970eadb3457d49a27a4")
                    user_id:
                      - reimburse_name: Terapi Mental Illnes
                        benefit_name: Biaya Berobat
                        notes: Resep Dokter
                        lead_approval: true
                        hr_approval: false
                        request_amount: 200000.00
                        paid_amount: 0.00
                        file_name: medical_receipt.pdf
                      - reimburse_name: Kalau Nikah Harus Punya 1M
                        benefit_name: Biaya Transport
                        notes: Perjalanan Dinas
                        lead_approval: true
                        hr_approval: false
                        request_amount: 350000.00
                        paid_amount: 0.00
                        file_name: travel_receipt.pdf
        "400":
          description: Bad request
        "500":
          description: Internal server error
  /reimbursement/{reimburseIndex}:
    get:
      tags:
        - "Reimburse"
      summary: Get a specific reimbursement
      description: Retrieve a specific reimbursement for the authenticated user.
      parameters:
        - in: path
          name: reimburseIndex
          required: true
          schema:
            type: integer
          description: The index of the reimbursement to retrieve.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Reimbursement"
              example:
                user_id: "4"
                reimbursements:
                  - reimburse_name: Ingin Menguasai Eropa
                    benefit_name: "Biaya Tank"
                    notes: "Panzer"
                    lead_approval: true
                    hr_approval: true
                    request_amount: 200000.00
                    paid_amount: 0.00
                    file_name: "medical_receipt.pdf"
        "404":
          description: Reimbursement not found
        "500":
          description: Internal server error

    put:
      tags:
        - "Reimburse"
      summary: Update a specific reimbursement
      description: Update a specific reimbursement for the authenticated user.
      parameters:
        - in: path
          name: reimburseIndex
          required: true
          schema:
            type: integer
          description: The index of the reimbursement to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Reimbursement"
            example:
              benefit_name: "Kalah Perang"
              notes: "Tidak Jadi Menguasai Eropa"
              lead_approval: false
              hr_approval: false
              request_amount: 250000.00
              paid_amount: 250000.00
              file_name: "updated_receipt.pdf"
      responses:
        "200":
          description: Successful update
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Reimbursement"
              example:
                message: "Reimbursement created successfully"
                data:
                  user_id: "4"
                  reimbursements:
                    - reimburse_name: Eropa Sudah Dikuasai
                      benefit_name: "Berhasil Menang"
                      notes: "Berhasil Menguasai Kelas Seni"
                      lead_approval: false
                      hr_approval: false
                      request_amount: 250000.00
                      paid_amount: 250000.00
                      file_name: "updated_receipt.pdf"
        "404":
          description: Reimbursement not found
        "500":
          description: Internal server error

    delete:
      tags:
        - "Reimburse"
      summary: Delete a specific reimbursement
      description: Delete a specific reimbursement for the authenticated user.
      parameters:
        - in: path
          name: reimburseIndex
          required: true
          schema:
            type: integer
          description: The index of the reimbursement to delete.
      responses:
        "200":
          description: Successful deletion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Reimbursement"
              example:
                message: "Berhasil Menghapus Reimburse"
                data:
                  user_id: "4"
                  reimbursements:
                    - reimburse_name: Menambah Kekuatan Tempur
                      benefit_name: "Biaya Tank"
                      notes: "Panzer"
                      lead_approval: true
                      hr_approval: true
                      request_amount: 200000.00
                      paid_amount: 0.00
                      file_name: "medical_receipt.pdf"
        "404":
          description: Reimbursement not found
        "500":
          description: Internal server error
  /leave:
    get:
      tags:
        - "Leave"
      summary: Get all leaves
      description: Retrieve a list of leaves for the authenticated user.
      responses:
        "200":
          description: Successful response when leaves are found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the response.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Leave"
              example:
                message: "Data cuti ditemukan."
                data:
                  - user_id: "4"
                    leaves:
                      - start_date: "2023-09-15"
                        end_date: "2023-09-18"
                        policy_code: "XYZ123"
                        notes: "Annual vacation"
                        file_name: "leave_request.pdf"
                        lead_approval: true
                        hr_approval: false
                      - start_date: "2023-10-10"
                        end_date: "2023-10-15"
                        policy_code: "ABC789"
                        notes: "Sick leave"
                        file_name: "sick_leave_request.pdf"
                        lead_approval: true
                        hr_approval: true
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the error.
              example:
                message: "Data cuti belum ada"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the error.
              example:
                message: "Ada error saat melakukan proses"
        "404":
          description: Leaves not found when leaves are empty
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the error.
              example:
                message: "Data cuti masih kosong."

    post:
      tags:
        - "Leave"
      summary: Create a new leave
      description: Create a new leave for the authenticated user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Leave"
            example:
              start_date: "2023-09-20"
              end_date: "2023-09-25"
              policy_code: "CEMRG"
              notes: "Personal leave"
              file_name: "personal_leave_request.pdf"
              lead_approval: true
              hr_approval: true
      responses:
        "201":
          description: Successful creation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the response.
                  data:
                    $ref: "#/components/schemas/Leave"
              example:
                message: "Leave created successfully"
                data:
                  user_id: "4"
                  leaves:
                    - start_date: "2023-09-20"
                      end_date: "2023-09-25"
                      policy_code: "CEMRG"
                      notes: "Personal leave"
                      file_name: "personal_leave_request.pdf"
                      lead_approval: true
                      hr_approval: true
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the error.
              example:
                message: "Terdapat masalah"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the error.
              example:
                message: "Ada error saat melakukan proses"
  /leave/alluser:
    get:
      tags:
        - "Leave"
      summary: Get all user leaves
      description: Retrieve a list of all user leaves.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the response.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Leave"
              example:
                message: "Data semua user ditemukan."
                data:
                  - user_id: "4"
                    leaves:
                      - start_date: "2023-09-15"
                        end_date: "2023-09-18"
                        policy_code: "XYZ123"
                        notes: "Annual vacation"
                        file_name: "leave_request.pdf"
                        lead_approval: true
                        hr_approval: false
                      - start_date: "2023-10-10"
                        end_date: "2023-10-15"
                        policy_code: "ABC789"
                        notes: "Sick leave"
                        file_name: "sick_leave_request.pdf"
                        lead_approval: true
                        hr_approval: true
        "400":
          description: Bad request
        "500":
          description: Internal server error

  /leave/approved:
    get:
      tags:
        - "Leave"
      summary: Get approved leaves
      description: Retrieve a list of approved leaves.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the response.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Leave"
              example:
                message: "Data cuti yang disetujui ditemukan."
                data:
                  - user_id: "4"
                    leaves:
                      - start_date: "2023-09-15"
                        end_date: "2023-09-18"
                        policy_code: "XYZ123"
                        notes: "Annual vacation"
                        file_name: "leave_request.pdf"
                        lead_approval: true
                        hr_approval: true
                      - start_date: "2023-10-10"
                        end_date: "2023-10-15"
                        policy_code: "ABC789"
                        notes: "Sick leave"
                        file_name: "sick_leave_request.pdf"
                        lead_approval: true
                        hr_approval: true
        "400":
          description: Bad request
        "500":
          description: Internal server error

  /leave/pending:
    get:
      tags:
        - "Leave"
      summary: Get pending leaves
      description: Retrieve a list of pending leaves.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the response.
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Leave"
              example:
                message: "Data cuti yang belum disetujui ditemukan."
                data:
                  - user_id: "4"
                    leaves:
                      - start_date: "2023-09-15"
                        end_date: "2023-09-18"
                        policy_code: "XYZ123"
                        notes: "Annual vacation"
                        file_name: "leave_request.pdf"
                        lead_approval: false
                        hr_approval: false
                      - start_date: "2023-10-10"
                        end_date: "2023-10-15"
                        policy_code: "ABC789"
                        notes: "Sick leave"
                        file_name: "sick_leave_request.pdf"
                        lead_approval: false
                        hr_approval: false
        "400":
          description: Bad request
        "500":
          description: Internal server error
  /leave/{leaveIndex}:
    get:
      tags:
        - "Leave"
      summary: Get a specific leave
      description: Retrieve a specific leave for the authenticated user by its index.
      parameters:
        - in: path
          name: leaveIndex
          required: true
          schema:
            type: integer
          description: The index of the leave to retrieve.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Leave"
              example:
                message: "Leave ditemukan!"
                data:
                  - start_date: "2023-09-20"
                    end_date: "2023-09-25"
                    policy_code: "CTHN"
                    notes: "Personal matter"
                    file_name: "personal_leave_request.pdf"
                    lead_approval: true
                    hr_approval: true
        "404":
          description: Leave not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the error.
              example:
                message: "Leave tidak ditemukan!"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the error.
              example:
                message: "Internal Server Error"

    put:
      tags:
        - "Leave"
      summary: Update a specific leave
      description: Update a specific leave for the authenticated user by its index.
      parameters:
        - in: path
          name: leaveIndex
          required: true
          schema:
            type: integer
          description: The index of the leave to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Leave"
            example:
              start_date: "2023-09-22"
              end_date: "2023-09-27"
              policy_code: "CTHN"
              notes: "Updated personal leave"
              file_name: "updated_personal_leave.pdf"
              lead_approval: true
              hr_approval: false
      responses:
        "200":
          description: Successful update
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Leave"
              example:
                user_id: "4"
                leaves:
                  - start_date: "2023-09-22"
                    end_date: "2023-09-27"
                    policy_code: "CEMRG"
                    notes: "Updated personal leave"
                    file_name: "updated_personal_leave.pdf"
                    lead_approval: true
                    hr_approval: false
        "404":
          description: Leave not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the error.
              example:
                message: "Leave tidak ditemukan!"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message describing the error.
              example:
                message: "Internal Server Error"

    delete:
      tags:
        - "Leave"
      summary: Delete a specific leave
      description: Delete a specific leave for the authenticated user by its index.
      parameters:
        - in: path
          name: leaveIndex
          required: true
          schema:
            type: integer
          description: The index of the leave to delete.
      responses:
        "200":
          description: Successful deletion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Leave"
              example:
                message: "Leave berhasil dihapus"
                data:
                  user_id: "4"
                  leaves:
                    - start_date: "2023-09-20"
                      end_date: "2023-09-25"
                      policy_code: "CTHN"
                      notes: "Personal leave"
                      file_name: "personal_leave_request.pdf"
                      lead_approval: true
                      hr_approval: false
        "404":
          description: Leave not found
        "500":
          description: Internal server error
  /keyresult:
    get:
      tags:
        - "Key Result"
      summary: Get all Key Results
      description: Retrieve a list of all Key Results.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              example:
                message: Data semua user ditemukan.
                data: [KeyResultObject]
        "404":
          description: No Key Results found
          content:
            application/json:
              example:
                message: Data keyResult belum ada
    post:
      tags:
        - "Key Result"
      summary: Create a new Key Result
      description: Create a new Key Result.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyResult"
      responses:
        "201":
          description: Key Result created successfully
          content:
            application/json:
              example:
                message: Pembuatan Key Result berhasil
                data: KeyResultObject
  /keyresults/alluser:
    get:
      summary: Get all Key Results for Users
      description: Retrieve a list of all Key Results for Users.
      tags: # Add the "Key Result" tag to this operation
        - Key Result
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              example:
                message: Data semua user ditemukan.
                data: [KeyResultObject]
        "404":
          description: No Key Results found
          content:
            application/json:
              example:
                message: Data keyResult belum ada

  /keyresults/achieved:
    get:
      summary: Get Achieved Key Results
      description: Retrieve a list of achieved Key Results.
      tags: # Add the "Key Result" tag to this operation
        - Key Result
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              example:
                message: Data keyResult yang disetujui ditemukan.
                data: [AchievedKeyResultObject]
        "404":
          description: No achieved Key Results found
          content:
            application/json:
              example:
                message: Belum ada keyResult yang disetujui

  /keyresults/ongoing:
    get:
      summary: Get Ongoing Key Results
      description: Retrieve a list of ongoing Key Results.
      tags: # Add the "Key Result" tag to this operation
        - Key Result
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              example:
                message: Data keyResult yang belum disetujui ditemukan.
                data: [OngoingKeyResultObject]
        "404":
          description: No ongoing Key Results found
          content:
            application/json:
              example:
                message: Semua keyResult belum disetujui
  /keyresult/{keyResultIndex}:
    get:
      tags:
        - "Key Result"
      summary: Get a Key Result by ID
      description: Retrieve a Key Result by its index.
      parameters:
        - in: path
          name: keyResultIndex
          required: true
          description: Index of the Key Result to retrieve
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              example:
                message: Progress ditemukan!
                data: KeyResultObject
        "404":
          description: Key Result not found
          content:
            application/json:
              example:
                message: Progress tidak ditemukan!
    put:
      tags:
        - "Key Result"
      summary: Update a Key Result by ID
      description: Update a Key Result by its index.
      parameters:
        - in: path
          name: keyResultIndex
          required: true
          description: Index of the Key Result to update
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyResult"
      responses:
        "200":
          description: Key Result updated successfully
          content:
            application/json:
              example:
                message: Key berhasil diperbarui!
                data: KeyResultObject
        "404":
          description: Key Result not found
          content:
            application/json:
              example:
                message: Key tidak ditemukan!
    delete:
      tags:
        - "Key Result"
      summary: Delete a Key Result by ID
      description: Delete a Key Result by its index.
      parameters:
        - in: path
          name: keyResultIndex
          required: true
          description: Index of the Key Result to delete
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Key Result deleted successfully
          content:
            application/json:
              example:
                message: Key berhasil dihapus!
                data: KeyResultObject
        "404":
          description: Key Result not found
          content:
            application/json:
              example:
                message: Key tidak ditemukan!
components:
  schemas:
    Reimbursement:
      type: object
      properties:
        user_id:
          type: string
        reimbursements:
          type: array
          items:
            type: object
            properties:
              benefit_name:
                type: string
              notes:
                type: string
              lead_approval:
                type: boolean
              hr_approval:
                type: boolean
              request_amount:
                type: number
              paid_amount:
                type: number
              file_name:
                type: string
    Leave:
      type: object
      properties:
        user_id:
          type: string
        leaves:
          type: array
          items:
            type: object
            properties:
              start_date:
                type: string
              end_date:
                type: string
              policy_code:
                type: string
              notes:
                type: string
              file_name:
                type: string
              lead_approval:
                type: boolean
              hr_approval:
                type: boolean
    KeyResult:
      type: object
      properties:
        name:
          type: string
        manager_id:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        progresses:
          type: array
          items:
            $ref: "#/components/schemas/KeyResultProgress"

    KeyResultProgress:
      type: object
      properties:
        employee_id:
          type: string
        name:
          type: string
        progress:
          type: number
          minimum: 0
          maximum: 100
        manager_approval:
          type: boolean
